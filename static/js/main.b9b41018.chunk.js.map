{"version":3,"sources":["components/Log/Log.css","components/DltCompFilterViewer/FilterLine/FilterLine.css","components/DltAppTimeLine/DltAppTimeLine.css","components/DltLogsViewer/DltLogsViewer.css","components/DltCompFilterViewer/DltCompFilterViewer.css","components/EditFilter/EditFilter.css","components/DltCompFilterViewer/img/hidden.png","components/DltCompFilterViewer/img/showen.png","components/EditFilterLine/EditFilterLine.css","store/actions/dltLogs.js","store/actions/actionTypes.js","store/actions/thisAppState.js","classes/DltLog/DltLog.js","classes/DltLogFactory/impl/sortLogs.js","classes/DltLogFactory/DltLogFactory.js","classes/DltLogFactory/impl/loadFromText.js","components/DltLogLoader/DltLogLoader.jsx","components/Log/Log.jsx","components/DltAppTimeLine/DltAppTimeLine.jsx","components/DltLogsViewer/DltLogsViewer.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","classes/Filter/exprTypes.js","classes/Filter/filterTypes.js","classes/Filter/Filter.js","components/EditFilterLine/EditFilterLine.jsx","components/EditFilter/EditFilter.jsx","components/DltCompFilterViewer/FilterLine/FilterLine.jsx","components/DltCompFilterViewer/DltCompFilterViewer.jsx","App.js","serviceWorker.js","store/utility.js","store/reducers/dltLog.js","index.js","App.css"],"names":["module","exports","Log","badge","Img","line","DltAppTimeLine","Container","DltLogsViewer","Table","Modal","__webpack_require__","p","hideDltComponent","dltComponentName","type","showMsgToUser","msg","DltLog","props","Object","classCallCheck","this","count","date","msFromStartUp","dltAppId","dltCtx","message","addToCell","cell","log","length","lastLog","i","splice","addToCellByTime","addToCellByCounter","push","factory","dltComponents","allDltLogs","visibleDltLogs","dltFilters","logs","_this2","Promise","resolve","reject","parsedLogs","lines","split","parts","time","microseconds","datetime","Date","parseInt","logObj","parseFloat","wtf1","projectName","wtf2","wtf3","mode","wtf4","join","concat","loadFromText","dict","sortedKeys","key","sort","outputList","sortKeysOfDict","counter","forEach","cellNumber","logObject","list","outputDict","logsDict","logsList","number","container","outputArray","sortedCells","a","b","getSortedKeysOfDict","collectAllLogs","sortLogs","convertDictToList","convertListToDict","filters","console","filter","some","dltFilter","isMatch","name","sortedLogs","objectSpread","React","Component","connect","state","app","dispatch","actionCreators","setDltLogsAvailable","isLoading","dltLogsAvailable","fileReader","handleFileRead","e","result","then","react_default","createElement","accept","onChange","file","FileReader","onloadend","readAsText","err","handleFileChosen","target","files","dateFormat","className","classes","style","top","reactstrap_es","color","title","onClick","onHideDltComponentHandler","map","components_Log_Log","keys","group","components_DltAppTimeLine_DltAppTimeLine","Header","internalClasses","header","children","Footer","footer","PAYLOAD","REGEX","POSITIVE","NEGATIVE","MARKER","Types","expr","Filter","filterType","exprType","caseSensitive","compare","createClass","value","text","includes","EditFilterLine","_this","possibleConstructorReturn","getPrototypeOf","call","backgroundColor","width","ModalExample","modal","active","toggle","bind","assertThisInitialized","setState","dltApp","buttonLabel","isOpen","size","components_EditFilterLine_EditFilterLine","FilterLine","EditFilter_EditFilter","src","visible","imgShowed","imgHidden","alt","doHide","doShow","showDltComponent","filterLines","DltCompFilterViewer_FilterLine_FilterLine","App","viewer","content","leftPanel","components_DltCompFilterViewer_DltCompFilterViewer","workspace","components_DltLogsViewer_DltLogsViewer","loader","DltLogLoader","loadingScreen","center","messageToUser","wrapper","components_Header_Header","components_Footer_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","updateObject","oldObject","updatedValues","initialState","SWDL: LUC","SWDL: SWUM","LNUX: SYS","BT: BT","PCM: PCM","PTLG: PTLG","DLTP: PTLG","PCM: PLCG","DLTP: STK","showFilter","reducer","arguments","undefined","action","addFilter","removeFilter","getAllDltLogs","getDltComponents","showComponent","hideComponent","setFilters","resetLogs","getVisibleDltLogs","rootReducer","combineReducers","dltLogReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","fileName","head","link","rel","href","appendChild","addCss","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b9b41018.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Log\":\"_1iuDGkeSNuqWSvUOQZ_Swi\",\"badge\":\"bYjpf4FKKG6CLMAsAo-17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Img\":\"_1TjtsQM8m6iQkwnDucXa-z\",\"line\":\"_3Usemv3T2FVM6BgKqHyzBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DltAppTimeLine\":\"_2MVcvzQPLJd97FwFrRZ7-v\",\"Container\":\"_3gjExQpc68B3bOsCELYHZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DltLogsViewer\":\"_3NfzuhqC2TvAxhU20VRxDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"_9UpRfytDD9DpC0gPoJvxS\",\"Img\":\"_1H9azvJH2XMqcOry9H5p67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_PHR9CotKaHAtDlgk8I0y\"};","module.exports = __webpack_public_path__ + \"static/media/hidden.08468bc8.png\";","module.exports = __webpack_public_path__ + \"static/media/showen.269395bb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_1aOVcnRvOmoGlaIPCPaA8p\"};","import * as actionTypes from './actionTypes';\n\nexport const addDltFilter = ( filterName, expr ) => {\n    return {\n        type: actionTypes.ADD_DLT_FILTER,\n        name: filterName,\n        expr: expr,\n    };\n};\n\nexport const removeDltFilter = ( filterName ) => {\n    return {\n        type: actionTypes.REMOVE_DLT_FILTER,\n        name: filterName,\n    };\n};\n\nexport const stateOnDltFilter = ( filterName ) => {\n    return {\n        type: actionTypes.STATE_ON_DLT_FILTER,\n        name: filterName\n    };\n};\n\nexport const stateOfDltFilter = ( filterName ) => {\n    return {\n        type: actionTypes.STATE_OFF_DLT_FILTER,\n        name: filterName\n    };\n};\n\nexport const loadDltLogs = (dltLogs ) => {\n    return {\n        type: actionTypes.LOAD_DLT_LOGS,\n        logs: dltLogs,\n    };\n};\n\nexport const showDltComponent = ( dltComponentName ) => {\n    return {\n        type: actionTypes.SHOW_DLT_COMPONENT,\n        dltComponentName: dltComponentName\n    };\n};\n\nexport const hideDltComponent = ( dltComponentName ) => {\n    return {\n        type: actionTypes.HIDE_DLT_COMPONENT,\n        dltComponentName: dltComponentName\n    };\n};\n","export const SHOW_DLT_COMPONENT = 'SHOW_DLT_COMPONENT';\nexport const HIDE_DLT_COMPONENT = 'HIDE_DLT_COMPONENT';\n\nexport const ADD_DLT_FILTER = 'ADD_DLT_FILTER';\nexport const REMOVE_DLT_FILTER = 'REMOVE_DLT_FILTER';\nexport const STATE_ON_DLT_FILTER = 'STATE_ON_DLT_FILTER';\nexport const STATE_OFF_DLT_FILTER = 'STATE_OFF_DLT_FILTER';\nexport const LOAD_DLT_LOGS = 'ADD_DLT_LOGS';\n\nexport const SHOW_MESSAGE_TO_USER = 'SHOW_MESSAGE_TO_USER';\nexport const SET_DLT_LOGS_AVAILABLE = 'SET_DLT_LOGS_AVAILABLE';\n","import * as actionTypes from './actionTypes';\n\nexport const showMsgToUser = ( msg ) => {\n    return {\n        type: actionTypes.SHOW_MESSAGE_TO_USER,\n        msg: msg\n    };\n};\n\nexport const setDltLogsAvailable = ( available ) => {\n    return {\n        type: actionTypes.SET_DLT_LOGS_AVAILABLE,\n        dltLogsAvailable: available\n    };\n};\n","export default class DltLog {\n  constructor ( props ) {\n    this.count = props.count;\n    this.date = props.date;\n    this.msFromStartUp = props.msFromStartUp;\n    // this.wtf1 = props.wtf1;\n    // this.projectName = props.projectName;\n    this.dltAppId = props.dltAppId;\n    this.dltCtx = props.dltCtx;\n    // this.wtf2 = props.wtf2;\n    // this.wtf3 = props.wtf3;\n    this.type = props.type;\n    // this.mode = props.mode;\n    // this.wtf4 = props.wtf4;\n    this.message = props.message;\n    this.dltComponentName = props.dltComponentName;\n  }\n}\n","function addToCellByCounter(cell, log) {\n  for (let i = cell.length; i--;) {\n    if (log.date > cell[i].date || 0 === i) {\n      cell.splice(i + 1, 0, log);\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction addToCellByTime (cell, log) {\n  for(let i = cell.length; i--;) {\n    if (log.date > cell[i].date || 0 === i) {\n      cell.splice(i + 1, 0, log);\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction addToCell (cell, log) {\n  if (cell.length) {\n    const lastLog = cell[cell.length-1];\n    if (log.msFromStartUp === lastLog.msFromStartUp) {\n\n      if ( (!addToCellByTime(cell, log)) && (!addToCellByCounter(cell, log)) ) {\n        cell.push(log);\n      }\n\n    } else {\n      for(let i = cell.length; i--;) {\n        if (log.msFromStartUp > cell[i].msFromStartUp) {\n          cell.splice(i + 1, 0, log);\n          break;\n        } else if (0 === i) {\n          cell.splice(0, 0, log);\n        }\n      }\n    }\n  } else {\n    cell.push(log);\n  }\n}\n\nexport function getSortedKeysOfDict (dict) {\n  const sortedKeys = [];\n  for(const key in dict) {\n    sortedKeys[sortedKeys.length] = key;\n  }\n  return sortedKeys.sort((a, b) => a - b);\n}\n\nfunction collectAllLogs(container) {\n  const outputArray = [];\n  const sortedCells = getSortedKeysOfDict(container);\n  let counter = 0;\n\n  sortedCells.forEach(cellNumber => {\n    container[cellNumber].forEach(logObject => {\n      logObject.count = counter++;\n      outputArray.push(logObject);\n    })\n  });\n  return outputArray;\n}\n\nfunction getCellNumber (number) {\n  // https://stackoverflow.com/questions/596467/how-do-i-convert-a-float-number-to-a-whole-number-in-javascript\n  number = number*10;\n  return number - (number % 1)\n}\n\nexport function sortLogs (logs) {\n  const container = {};\n\n  for(let i = 0; i < logs.length; i++) {\n    const cell = getCellNumber(logs[i].msFromStartUp);\n    if ( ! (cell in container) ) {\n      container[cell] = [];\n    }\n    addToCell(container[cell], logs[i]);\n  }\n\n  return collectAllLogs(container);\n}\n","import React from 'react';\nimport { loadFromText } from './impl/loadFromText';\nimport { sortLogs } from './impl/sortLogs';\n\n\nclass DltLogFactory extends React.Component {\n  dltComponents = {};\n  allDltLogs = {};\n  visibleDltLogs = {};\n  dltFilters = {};\n\n  loadFromText (logs, dltFilters) {\n    return new Promise((resolve, reject) => {\n      this.allDltLogs = loadFromText (logs, dltFilters);\n      resolve();\n    })\n  }\n\n  sortKeysOfDict (dict) {\n    const sortedKeys = [];\n    for(const key in dict) {\n      sortedKeys[sortedKeys.length] = key;\n    }\n    sortedKeys.sort();\n    return sortedKeys;\n  }\n\n  setFilters (dltFilters) {\n    this.dltFilters = dltFilters;\n  }\n\n  convertDictToList(dict) {\n    const outputList = [];\n    const sortedKeys = this.sortKeysOfDict(dict);\n    let counter = 0;\n    sortedKeys.forEach(cellNumber => {\n      dict[cellNumber].forEach(logObject => {\n        logObject.count = counter++;\n        outputList.push(logObject);\n      })\n    });\n    return outputList;\n  }\n\n  convertListToDict(list) {\n    const outputDict = {};\n    list.forEach(log => {\n      if ( !(log.dltComponentName in outputDict) ) {\n        outputDict[log.dltComponentName] = [];\n      }\n      outputDict[log.dltComponentName].push( log );\n    });\n    return outputDict;\n  }\n\n  sort (logsDict) {\n    const logsList = sortLogs( this.convertDictToList(logsDict) );\n    return this.convertListToDict(logsList);\n  }\n\n  filter (logs, filters) {\n    console.log('filters', filters);\n    if (filters && filters.length) {\n      console.log('do filters');\n      logs = logs.filter(log => filters.some(dltFilter => dltFilter.isMatch(log.message)) );\n    } else {\n      // if no filter for this app, each log should be shown, because you might need some text to add some filter\n    }\n    return logs;\n  }\n\n  showComponent (name) {\n    this.dltComponents[name] = true;\n\n    this.visibleDltLogs[name] = this.filter(this.allDltLogs[name], this.dltFilters[name]);\n    const sortedLogs = this.sort(this.visibleDltLogs);\n\n    return { dltComponents: { ...this.dltComponents }, visibleDltLogs: { ...sortedLogs } }\n  }\n\n  hideComponent (name) {\n    this.dltComponents[name] = false;\n    delete this.visibleDltLogs[name];\n    return { dltComponents: { ...this.dltComponents }, visibleDltLogs: { ...this.sort(this.visibleDltLogs) } }\n  }\n\n  getAllDltLogs () {\n    return { ...this.allDltLogs };\n  }\n\n  getVisibleDltLogs () {\n    return { ...this.visibleDltLogs };\n  }\n\n  resetLogs () {\n    this.visibleDltLogs = {};\n  }\n\n  getDltComponents () {\n    this.dltComponents = {};\n\n    for (const name in this.allDltLogs) {\n      this.dltComponents[name] = ( name in this.visibleDltLogs );\n    }\n    return { ...this.dltComponents };\n  }\n}\n\nexport const factory = new DltLogFactory();\n","import DltLog from \"../../DltLog/DltLog\";\n\nfunction adaptIfDLTP(log) {\n  if ('DLTP' === log.dltAppId) {\n    const parts = log.message.split(' ');\n    log.msFromStartUp = parseFloat(parts[0].slice(1, -1));  // [45.5454]  ->  45.5454\n  }\n}\n\nexport function loadFromText (logs, dltFilters) {\n  const parsedLogs = {};\n  const lines = logs.split('\\n');\n  for (const line in lines) {\n    if ( lines[line] ) {\n      const parts = lines[line].split(' ');\n\n      const date = parts[1].split('/');                   // 2018/10/13       ->  [2018, 10, 13]\n      const time = parts[2].split('.')[0].split(':');     // 10:48:10.624763  ->  [10, 48, 10]\n      const microseconds = parts[2].split('.')[1];        // 10:48:10.624763  ->  624763\n\n      const datetime = new Date(\n        /* year */          parseInt(date[0]),\n        /* month */         parseInt(date[1]) - 1,\n        /* date */          parseInt(date[2]),\n        /* hours */         parseInt(time[0]),\n        /* minutes */       parseInt(time[1]),\n        /* seconds */       parseInt(time[2]),\n        /* milliseconds */  parseInt(microseconds),\n      );\n\n      const logObj = new DltLog({\n        count: parts[0],                      // 0\n        date: datetime,\n        msFromStartUp: parseFloat(parts[3]),  // 43.4105\n        wtf1: parts[4],                       // 21\n        projectName: parts[5],    // MIB3\n        dltAppId: parts[6],       // SWDL\n        dltCtx: parts[7],         // LUC\n        wtf2: parts[8],           // 1104\n        wtf3: parts[9],           // log\n        type: parts[10],           // info\n        mode: parts[11],          // verbose\n        wtf4: parts[12],          // 1\n        message: parts.splice(13, parts.length).join(' '),  // super log string with many spaces\n        dltComponentName: `${parts[6]}: ${parts[7]}`,\n      });\n      // adaptIfDLTP(logObj);\n\n      if ( !(logObj.dltComponentName in parsedLogs) ) {\n        parsedLogs[logObj.dltComponentName] = [];\n      }\n      parsedLogs[logObj.dltComponentName].push( logObj );\n    }\n  }\n  return parsedLogs;\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\n\nimport { factory } from './../../classes/DltLogFactory/DltLogFactory';\n\n\nconst ImportFromFileBodyComponent = (props) => {\n  let fileReader;\n\n  const handleFileRead = (e) => {\n    props.showMsgToUser(\"load dlt logs to system ...\");\n\n    factory.loadFromText( fileReader.result, props.dltFilters ).then(() => {\n      props.setDltLogsAvailable(true);\n    });\n  };\n\n  const handleFileChosen = (file) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    try {\n      fileReader.readAsText(file);\n      props.showMsgToUser(\"reading file ...\");\n      props.setDltLogsAvailable(false);\n    } catch (err) {\n      console.log(\"no file chosen!\");\n    }\n  };\n\n  return <div>\n    <input type='file'\n           accept='.txt'\n           onChange={e => handleFileChosen(e.target.files[0])}\n    />\n  </div>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    dltFilters: state.app.dltFilters,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showMsgToUser: msg => dispatch( actionCreators.showMsgToUser(msg) ),\n    setDltLogsAvailable: isLoading => dispatch( actionCreators.setDltLogsAvailable(isLoading) ),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportFromFileBodyComponent);\n","import React from 'react';\nimport classes from './Log.css';\nimport { Badge } from 'reactstrap';\nimport dateFormat from 'dateformat';\n\n\nconst Log = (props) => {\n  // http://blog.stevenlevithan.com/archives/date-time-format\n  const date = dateFormat(props.log.date, \"mmmm dS, h:MM:ss.l\");\n\n  return <div className={classes.Log} style={{top: `${props.log.count*50}px`}}>\n    <Badge className={classes.badge} color=\"info\">{props.log.count}</Badge>\n    <Badge className={classes.badge} color=\"info\">{date}</Badge>\n    <Badge className={classes.badge} color=\"success\">{props.log.msFromStartUp}</Badge>\n    <span>{props.log.message}</span>\n  </div>;\n};\n\nexport default Log;\n","import React from 'react';\nimport classes from './DltAppTimeLine.css';\nimport Log from './../Log/Log';\n\n\nconst DltAppTimeLine = (props) => {\n  return <div className={classes.DltAppTimeLine}>\n\n    <h2>\n      {props.title}\n      <button onClick={props.onHideDltComponentHandler}>Hide</button>\n    </h2>\n\n    <div className={classes.Container}>\n      { props.logs.map(log => <Log key={log.count} log={log} />) }\n    </div>\n\n  </div>;\n};\n\nexport default DltAppTimeLine\n","import React from 'react';\nimport classes from './DltLogsViewer.css';\n\nimport DltAppTimeLine from './../DltAppTimeLine/DltAppTimeLine';\n\n\nimport { connect } from 'react-redux';\nimport * as actionCreators from \"../../store/actions\";\n\n\nconst DltLogsViewer = (props) => {\n  return (\n    <div className={classes.DltLogsViewer}>\n      { Object.keys(props.logs).map(\n        (group) => <DltAppTimeLine onHideDltComponentHandler={() => {props.hideDltComponent(group)}}\n                                   key={group}\n                                   title={group}\n                                   logs={props.logs[group]} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.app.visibleDltLogs,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    hideDltComponent: (dltComponentName) => dispatch( actionCreators.hideDltComponent(dltComponentName) ),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DltLogsViewer);\n","import React from 'react';\nimport classes from './../../App.css';\n\n\nconst Header = (props) => {\n  const internalClasses = [classes.header];\n\n  return <header className={internalClasses.join(' ')}>\n    {props.children}\n  </header>\n};\n\nexport default Header;\n","import React from 'react';\nimport classes from './../../App.css';\n\n\nconst Footer = () => {\n  const internalClasses = [classes.footer];\n\n  return <footer className={internalClasses.join(' ')}>Footer</footer>\n};\n\nexport default Footer;\n","export const PAYLOAD = 'PAYLOAD';\nexport const REGEX = 'REGEX';\n","export const POSITIVE = 'POSITIVE';\nexport const NEGATIVE = 'NEGATIVE';\nexport const MARKER = 'MARKER';\n","import * as expr from './exprTypes';\nimport * as filter from './filterTypes';\n\nexport class Types {\n  static expr = expr;\n  static filter = filter;\n}\n\nexport class Filter {\n  color = '';\n  expr = '';\n  filterType = Types.filter.POSITIVE;\n  compare ='AND|OR';\n  exprType = Types.expr.REGEX;\n  caseSensitive = false;\n\n  constructor (color, expr, filterType, exprType, caseSensitive) {\n    this.color = color;\n    this.expr = expr;\n    this.filterType = filterType;\n    this.exprType = exprType;\n    this.caseSensitive = caseSensitive;\n  }\n\n  isMatch (text) {\n    let isMatch = false;\n    if ( Types.expr.PAYLOAD === this.exprType ) {\n      isMatch = text.includes( this.expr );\n    }\n    return isMatch;\n  }\n}\n","import React from 'react';\nimport { Badge } from 'reactstrap';\n\nimport classes from './EditFilterLine.css';\nimport {Types} from \"../../classes/Filter/Filter\";\n\n\nclass EditFilterLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <table style={{backgroundColor: this.props.filter.color, width: '100%'}}>\n        <tbody>\n          <tr>\n            <td><input type=\"text\" value={this.props.filter.expr} /></td>\n            <td><Badge color=\"light\">color</Badge></td><td>{this.props.filter.color}</td>\n            <td><Badge color=\"light\">f-type</Badge></td><td>{this.props.filter.filterType}</td>\n            <td><Badge color=\"light\">ex-type</Badge></td><td>{this.props.filter.exprType}</td>\n            <td><Badge color=\"light\">compare</Badge></td><td>{this.props.filter.compare}</td>\n            <td><Badge color=\"light\">case</Badge></td><td>{this.props.filter.caseSensitive?'on':'off'}</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\nexport default EditFilterLine;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport classes from './EditFilter.css';\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\nimport EditFilterLine from \"../EditFilterLine/EditFilterLine\";\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      dltFilters: this.props.dltFilters,\n      active: '',\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    const filters = this.props.dltFilters[this.props.dltApp];\n\n    return (\n      <div>\n        <span onClick={this.toggle}>{this.props.buttonLabel}</span>\n\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={[this.props.className, classes.Modal].join(' ')}\n          size=\"lg\">\n\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n\n          <ModalBody>\n            { filters ? filters.map(filter => <EditFilterLine key={filter.expr} filter={filter} />) : null }\n          </ModalBody>\n\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dltFilters: state.app.dltFilters,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    hideDltComponent: (dltComponentName) => dispatch( actionCreators.hideDltComponent(dltComponentName) ),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalExample);\n","import React from 'react';\nimport classes from './FilterLine.css';\n\nimport EditFilter from './../../../components/EditFilter/EditFilter';\n\n\nconst FilterLine = (props) => {\n  return <tr className={classes.line}>\n    <td className={classes.name}>\n      <EditFilter dltApp={props.dltApp} buttonLabel={props.dltApp} />\n    </td>\n\n    <td>\n      <img\n        src={props.visible ? props.imgShowed : props.imgHidden}\n        className={classes.Img}\n        alt={`component (${props.dltApp}) logs: are ${props.visible ? 'visible' : 'hidden' }`}\n        onClick={ () => props.visible ? props.doHide() : props.doShow() } />\n    </td>\n  </tr>;\n};\n\nexport default FilterLine;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from \"../../store/actions\";\nimport classes from './DltCompFilterViewer.css';\nimport FilterLine from './FilterLine/FilterLine';\n\nimport imgHidden from './img/hidden.png';\nimport imgShowed from './img/showen.png';\n\nconst DltCompFilterViewer = (props) => {\n  let filterLines = Object.keys(props.dltComponents).map(\n    dltApp => <FilterLine key={dltApp}\n                          dltApp={dltApp}\n                          imgHidden={imgHidden}\n                          imgShowed={imgShowed}\n                          visible={props.dltComponents[dltApp]}\n                          doShow={ () => { props.showDltComponent(dltApp) } }\n                          doHide={ () => { props.hideDltComponent(dltApp) } } />);\n\n  return <table className={classes.Table}>\n    <tbody>\n    {filterLines}\n    </tbody>\n  </table>;\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    dltComponents: state.app.dltComponents,\n    logs: state.app.visibleDltLogs,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showDltComponent: (dltComponentName) => dispatch( actionCreators.showDltComponent(dltComponentName) ),\n    hideDltComponent: (dltComponentName) => dispatch( actionCreators.hideDltComponent(dltComponentName) ),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DltCompFilterViewer);\n","import React, { Component } from 'react';\nimport classes from './App.css';\nimport DltLogLoader from './components/DltLogLoader/DltLogLoader';\nimport DltLogsViewer from './components/DltLogsViewer/DltLogsViewer';\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport DltCompFilterViewer from './components/DltCompFilterViewer/DltCompFilterViewer'\n\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"./store/actions\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    props.showMsgToUser(\"Waiting for logs\");\n  }\n\n\n  render() {\n    const viewer = (\n      <div className={classes.content}>\n        <div className={ classes.leftPanel }>\n          <DltCompFilterViewer />\n        </div>\n        <div className={ classes.workspace }>\n          <DltLogsViewer />\n        </div>\n      </div>\n    );\n\n    const loader = (\n      <DltLogLoader />\n    );\n\n    const loadingScreen = (\n      <div className={ [classes.content, classes.center].join(' ') }>\n        <h1>{this.props.messageToUser}</h1>\n      </div>\n    );\n\n    return (\n      <div className={classes.wrapper}>\n        <Header>\n          {loader}\n        </Header>\n\n        { this.props.dltLogsAvailable ? viewer : loadingScreen }\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    messageToUser: state.app.msg,\n    dltLogsAvailable: state.app.dltLogsAvailable,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showMsgToUser: msg => dispatch( actionCreators.showMsgToUser(msg) ),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nimport { Filter, Types } from './../../classes/Filter/Filter';\nimport { factory } from \"../../classes/DltLogFactory/DltLogFactory\";\n\nconst initialState = {\n  dltFilters: {\n    \"SWDL: LUC\" : [\n      new Filter('red', 'register1 info', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n      new Filter('green', 'register3 info', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"SWDL: SWUM\" : [\n    ],\n    \"LNUX: SYS\" : [\n      new Filter('#eee', '', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"BT: BT\" : [\n      new Filter('#eee', '', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"PCM: PCM\" : [\n      new Filter('#eee', '', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"PTLG: PTLG\" : [\n      new Filter('#eee', '', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"DLTP: PTLG\" : [\n      new Filter('#eee', '', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"PCM: PLCG\" : [\n      new Filter('#eee', '', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n    \"DLTP: STK\" : [\n      new Filter('#eee', 'sfr_mi::CServiceImpl :: sendMsg', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n      new Filter('#eee', 'ssi_mi::CIccNodeBase :: onGenRandCb', Types.filter.POSITIVE, Types.expr.PAYLOAD, false),\n    ],\n  },\n  allDltLogs: [\n  ],\n  visibleDltLogs: [\n  ],\n  dltComponents: {\n  },\n  msg: \"\",\n  dltLogsAvailable: false\n};\n\nconst showFilter = (doShow, name, state) => {\n  const dltFilters = { ...state.dltFilters };\n  dltFilters[name] = doShow;\n  return updateObject(state, {dltFilters: dltFilters});\n};\n\nconst addFilter = (name, expr, state) => {\n  const dltFilters = { ...state.dltFilters, name: expr };\n  return updateObject(state, {dltFilters: dltFilters});\n};\n\nconst removeFilter = (name, state) => {\n  const dltFilters = { ...state.dltFilters };\n  delete dltFilters[name];\n  return updateObject(state, {dltFilters: dltFilters});\n};\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    /**\n     * FILTERS\n     * */\n    case actionTypes.ADD_DLT_FILTER:\n      return addFilter(state.name, state.expr, state);\n    case actionTypes.REMOVE_DLT_FILTER:\n      return removeFilter(action.name, state);\n    case actionTypes.STATE_ON_DLT_FILTER:\n      return showFilter (true, action.name, state);\n    case actionTypes.STATE_OFF_DLT_FILTER:\n      return showFilter (false, action.name, state);\n\n    /**\n     * LOGS\n     * */\n    case actionTypes.LOAD_DLT_LOGS:\n      return updateObject(state, {\n        allDltLogs: factory.getAllDltLogs(),\n        dltComponents: factory.getDltComponents(),\n      });\n\n    /**\n     * COMPONENTS\n     * */\n    case actionTypes.SHOW_DLT_COMPONENT:\n      return updateObject(state, factory.showComponent(action.dltComponentName));\n    case actionTypes.HIDE_DLT_COMPONENT:\n      return updateObject(state, factory.hideComponent(action.dltComponentName));\n\n    /**\n     * WHOLE APP\n     * */\n    case actionTypes.SHOW_MESSAGE_TO_USER:\n      return updateObject(state, {\n        msg: action.msg\n      });\n    case actionTypes.SET_DLT_LOGS_AVAILABLE:\n      factory.setFilters(state.dltFilters);\n      factory.resetLogs();\n      return updateObject(state, {\n        dltLogsAvailable: action.dltLogsAvailable,\n        allDltLogs: factory.getAllDltLogs(),\n        dltComponents: factory.getDltComponents(),\n        visibleDltLogs: factory.getVisibleDltLogs(),\n      });\n\n    default:\n      break;\n  }\n  return state;\n};\n\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport dltLogReducer from './store/reducers/dltLog';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nfunction addCss(fileName) {\n  const head = document.head;\n  const link = document.createElement(\"link\");\n  link.type = \"text/css\";\n  link.rel = \"stylesheet\";\n  link.href = fileName;\n  head.appendChild(link);\n}\n\nconst rootReducer = combineReducers({\n    app: dltLogReducer,\n});\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(/*logger, */thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\naddCss('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css');\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_3QGUbpigO1tNlXGdrYGHxa\",\"header\":\"hwRc6f9WKlpNo0-FJMnLB\",\"content\":\"OG-1Xwkk8OG_vpCZFgfEu\",\"center\":\"_3yB-IN4N1hiAEajk3WkgX\",\"leftPanel\":\"_3XoThOxXulPOrI4kRpn1Ng\",\"workspace\":\"_2q-HCqfEfR_GuwJqIZOd3s\",\"footer\":\"_1fwnD348WPEtOs2Aa-4e82\"};"],"sourceRoot":""}